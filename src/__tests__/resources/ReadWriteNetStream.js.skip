import _               from 'lodash'
import events          from 'events'
import util            from 'util'
import ReadWriteStream from './ReadWriteStream'

function ReadWriteNetStream(specialTimeout) {
    this.specialTimeout = specialTimeout || false
    ReadWriteStream.call(this)
    this.bufferSize    = 0
    this.remoteAddress = ''
    this.remotePort    = ''
    this.bytesRead     = ''
    this.bytesWritten  = ''
}

util.inherits(ReadWriteNetStream, ReadWriteStream);

[
    'connect', 'setSecure', 'setTimeout', 'setNoDelay', 'setKeepAlive', 'address', 'timeout',
].forEach(function (funcName) {
    ReadWriteNetStream.prototype[funcName.name || funcName] = (function (func) {
        const event = funcName.event || func
        return function (a, b) {
            if (this.specialTimeout && funcName === 'setTimeout' && _.isFunction(b)) {
                this.on('timeout', b)
            }
            const args = Array.prototype.slice.call(arguments)
            args.unshift(event)
            this.emit.apply(this, args)
        }
    }(funcName))
})

module.exports = ReadWriteNetStream
